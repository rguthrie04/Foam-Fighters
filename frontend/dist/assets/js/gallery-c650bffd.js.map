{"version":3,"file":"gallery-c650bffd.js","sources":["../../../assets/js/gallery.js"],"sourcesContent":["/**\r\n * Gallery Functionality\r\n * Handles filtering, modal displays, and interactive features\r\n */\r\n\r\n// Gallery filtering functionality\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const filterButtons = document.querySelectorAll('.filter-btn');\r\n    const galleryItems = document.querySelectorAll('.gallery-item');\r\n    const loadMoreBtn = document.getElementById('loadMoreBtn');\r\n\r\n    // Filter functionality\r\n    filterButtons.forEach(button => {\r\n        button.addEventListener('click', function() {\r\n            const filter = this.getAttribute('data-filter');\r\n            \r\n            // Update active button\r\n            filterButtons.forEach(btn => btn.classList.remove('active'));\r\n            filterButtons.forEach(btn => btn.classList.add('btn-outline-primary'));\r\n            filterButtons.forEach(btn => btn.classList.remove('btn-primary'));\r\n            \r\n            this.classList.add('active');\r\n            this.classList.remove('btn-outline-primary');\r\n            this.classList.add('btn-primary');\r\n            \r\n            // Filter gallery items\r\n            galleryItems.forEach(item => {\r\n                const categories = item.getAttribute('data-categories');\r\n                \r\n                if (filter === 'all' || categories.includes(filter)) {\r\n                    item.classList.remove('hidden');\r\n                    item.style.display = 'block';\r\n                } else {\r\n                    item.classList.add('hidden');\r\n                    setTimeout(() => {\r\n                        item.style.display = 'none';\r\n                    }, 300);\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n    // Load more functionality (mock implementation)\r\n    if (loadMoreBtn) {\r\n        loadMoreBtn.addEventListener('click', function() {\r\n            // In a real implementation, this would load more items from the server\r\n            this.innerHTML = '<i class=\"fas fa-spinner fa-spin me-2\"></i>Loading...';\r\n            \r\n            setTimeout(() => {\r\n                this.innerHTML = '<i class=\"fas fa-check me-2\"></i>All projects loaded';\r\n                this.disabled = true;\r\n                this.classList.add('btn-success');\r\n                this.classList.remove('btn-outline-primary');\r\n            }, 1500);\r\n        });\r\n    }\r\n\r\n    // Image lazy loading\r\n    const images = document.querySelectorAll('img[data-src]');\r\n    const imageObserver = new IntersectionObserver((entries, observer) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                const img = entry.target;\r\n                img.src = img.dataset.src;\r\n                img.classList.remove('lazy');\r\n                imageObserver.unobserve(img);\r\n            }\r\n        });\r\n    });\r\n\r\n    images.forEach(img => imageObserver.observe(img));\r\n\r\n    // Animate stats on scroll\r\n    const statItems = document.querySelectorAll('.stat-item h3');\r\n    const statsObserver = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                animateNumber(entry.target);\r\n                statsObserver.unobserve(entry.target);\r\n            }\r\n        });\r\n    });\r\n\r\n    statItems.forEach(stat => statsObserver.observe(stat));\r\n});\r\n\r\n// Animate numbers in statistics\r\nfunction animateNumber(element) {\r\n    const target = parseInt(element.textContent.replace(/\\D/g, ''));\r\n    const suffix = element.textContent.replace(/\\d/g, '');\r\n    let current = 0;\r\n    const increment = target / 50;\r\n    \r\n    const timer = setInterval(() => {\r\n        current += increment;\r\n        if (current >= target) {\r\n            current = target;\r\n            clearInterval(timer);\r\n        }\r\n        element.textContent = Math.floor(current) + suffix;\r\n    }, 30);\r\n}"],"names":["filterButtons","galleryItems","loadMoreBtn","button","filter","btn","item","categories","images","imageObserver","entries","observer","entry","img","statItems","statsObserver","animateNumber","stat","element","target","suffix","current","increment","timer"],"mappings":"2BAMA,SAAS,iBAAiB,mBAAoB,UAAW,CACrD,MAAMA,EAAgB,SAAS,iBAAiB,aAAa,EACvDC,EAAe,SAAS,iBAAiB,eAAe,EACxDC,EAAc,SAAS,eAAe,aAAa,EAGzDF,EAAc,QAAQG,GAAU,CAC5BA,EAAO,iBAAiB,QAAS,UAAW,CACxC,MAAMC,EAAS,KAAK,aAAa,aAAa,EAG9CJ,EAAc,QAAQK,GAAOA,EAAI,UAAU,OAAO,QAAQ,CAAC,EAC3DL,EAAc,QAAQK,GAAOA,EAAI,UAAU,IAAI,qBAAqB,CAAC,EACrEL,EAAc,QAAQK,GAAOA,EAAI,UAAU,OAAO,aAAa,CAAC,EAEhE,KAAK,UAAU,IAAI,QAAQ,EAC3B,KAAK,UAAU,OAAO,qBAAqB,EAC3C,KAAK,UAAU,IAAI,aAAa,EAGhCJ,EAAa,QAAQK,GAAQ,CACzB,MAAMC,EAAaD,EAAK,aAAa,iBAAiB,EAElDF,IAAW,OAASG,EAAW,SAASH,CAAM,GAC9CE,EAAK,UAAU,OAAO,QAAQ,EAC9BA,EAAK,MAAM,QAAU,UAErBA,EAAK,UAAU,IAAI,QAAQ,EAC3B,WAAW,IAAM,CACbA,EAAK,MAAM,QAAU,MACxB,EAAE,GAAG,EAE1B,CAAa,CACb,CAAS,CACT,CAAK,EAGGJ,GACAA,EAAY,iBAAiB,QAAS,UAAW,CAE7C,KAAK,UAAY,wDAEjB,WAAW,IAAM,CACb,KAAK,UAAY,uDACjB,KAAK,SAAW,GAChB,KAAK,UAAU,IAAI,aAAa,EAChC,KAAK,UAAU,OAAO,qBAAqB,CAC9C,EAAE,IAAI,CACnB,CAAS,EAIL,MAAMM,EAAS,SAAS,iBAAiB,eAAe,EAClDC,EAAgB,IAAI,qBAAqB,CAACC,EAASC,IAAa,CAClED,EAAQ,QAAQE,GAAS,CACrB,GAAIA,EAAM,eAAgB,CACtB,MAAMC,EAAMD,EAAM,OAClBC,EAAI,IAAMA,EAAI,QAAQ,IACtBA,EAAI,UAAU,OAAO,MAAM,EAC3BJ,EAAc,UAAUI,CAAG,CAC9B,CACb,CAAS,CACT,CAAK,EAEDL,EAAO,QAAQK,GAAOJ,EAAc,QAAQI,CAAG,CAAC,EAGhD,MAAMC,EAAY,SAAS,iBAAiB,eAAe,EACrDC,EAAgB,IAAI,qBAAsBL,GAAY,CACxDA,EAAQ,QAAQE,GAAS,CACjBA,EAAM,iBACNI,EAAcJ,EAAM,MAAM,EAC1BG,EAAc,UAAUH,EAAM,MAAM,EAEpD,CAAS,CACT,CAAK,EAEDE,EAAU,QAAQG,GAAQF,EAAc,QAAQE,CAAI,CAAC,CACzD,CAAC,EAGD,SAASD,EAAcE,EAAS,CAC5B,MAAMC,EAAS,SAASD,EAAQ,YAAY,QAAQ,MAAO,EAAE,CAAC,EACxDE,EAASF,EAAQ,YAAY,QAAQ,MAAO,EAAE,EACpD,IAAIG,EAAU,EACd,MAAMC,EAAYH,EAAS,GAErBI,EAAQ,YAAY,IAAM,CAC5BF,GAAWC,EACPD,GAAWF,IACXE,EAAUF,EACV,cAAcI,CAAK,GAEvBL,EAAQ,YAAc,KAAK,MAAMG,CAAO,EAAID,CAC/C,EAAE,EAAE,CACT"}