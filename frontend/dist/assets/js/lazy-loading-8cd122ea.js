class a{constructor(){this.imageObserver=null,this.contentObserver=null,this.init()}init(){"IntersectionObserver"in window?(this.setupImageLazyLoading(),this.setupContentLazyLoading()):this.loadAllImages()}setupImageLazyLoading(){const e={root:null,rootMargin:"50px",threshold:.1};this.imageObserver=new IntersectionObserver(t=>{t.forEach(s=>{s.isIntersecting&&(this.loadImage(s.target),this.imageObserver.unobserve(s.target))})},e),this.observeLazyImages()}setupContentLazyLoading(){const e={root:null,rootMargin:"100px",threshold:.1};this.contentObserver=new IntersectionObserver(t=>{t.forEach(s=>{s.isIntersecting&&(s.target.classList.add("lazy-loaded"),this.contentObserver.unobserve(s.target))})},e),this.observeLazyContent()}observeLazyImages(){document.querySelectorAll("img[data-src]").forEach(t=>{this.imageObserver.observe(t)})}observeLazyContent(){document.querySelectorAll(".lazy-content").forEach(t=>{this.contentObserver.observe(t)})}loadImage(e){e.classList.add("loading");const t=new Image;t.onload=()=>{e.src=e.dataset.src,e.classList.remove("loading"),e.classList.add("loaded"),delete e.dataset.src},t.onerror=()=>{e.classList.remove("loading"),e.classList.add("error"),e.src="/assets/images/placeholder.svg"},t.src=e.dataset.src}loadAllImages(){document.querySelectorAll("img[data-src]").forEach(t=>{t.src=t.dataset.src,delete t.dataset.src})}addNewImages(e=document){this.imageObserver&&e.querySelectorAll("img[data-src]").forEach(s=>{this.imageObserver.observe(s)})}addNewContent(e=document){this.contentObserver&&e.querySelectorAll(".lazy-content").forEach(s=>{this.contentObserver.observe(s)})}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{window.lazyLoader=new a}):window.lazyLoader=new a;export{a as default};
//# sourceMappingURL=lazy-loading-8cd122ea.js.map
