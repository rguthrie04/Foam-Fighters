{"version":3,"mappings":"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","names":["safeDebugLog","message","data","safeDebugError","error","safeSetTimeout","callback","delay","label","safeAddEventListener","element","event","options","showSuccess","showToast","showError","type","container","toast","FoamFightersApp","navbar","scrollId","link","clickId","e","targetId","targetElement","offsetTop","navbarCollapse","item","quoteForm","submitId","input","blurId","phoneInput","inputId","contactForm","form","submitButton","submitText","loadingText","formData","inquiryData","result","foamLocations","issues","contactData","contactUrgency","isValid","field","value","errorMessage","num","min","max","feedback","numbers","chatWidget","modal","observerOptions","observer","entries","entry","el","focusable","button","keydownId","href","target","eventName","parameters","conversionType","LazyLoader","__vitePreload","img","initializeDropdowns","dropdownElement","toggle","menu","isCurrentlyOpen","dropdown","dropdownMenu","touchStartId","bodyClickId","checkBootstrap","servicesLink","fallbackClickId","dropdownParent","app"],"sources":["../../../assets/js/main.js"],"sourcesContent":["/**\r\n * Foam Fighters - Main JavaScript\r\n * Professional spray foam removal company website\r\n */\r\n\r\n// Browser-compatible utilities (removed Node.js imports for dev server)\r\n// We'll implement browser-safe versions of these utilities\r\n\r\n// Safe debug logging\r\nfunction safeDebugLog(message, data = {}) {\r\n    if (typeof console !== 'undefined' && console.log) {\r\n        console.log(`[Foam Fighters] ${message}`, data);\r\n    }\r\n}\r\n\r\nfunction safeDebugError(message, error = {}) {\r\n    if (typeof console !== 'undefined' && console.error) {\r\n        console.error(`[Foam Fighters ERROR] ${message}`, error);\r\n    }\r\n}\r\n\r\n// Safe timer management\r\nfunction safeSetTimeout(callback, delay, label = '') {\r\n    try {\r\n        return setTimeout(callback, delay);\r\n    } catch (error) {\r\n        safeDebugError('Timer error', error);\r\n    }\r\n}\r\n\r\nfunction safeAddEventListener(element, event, callback, options = false, label = '') {\r\n    try {\r\n        if (element && element.addEventListener) {\r\n            element.addEventListener(event, callback, options);\r\n            return `${label}_${Date.now()}`;\r\n        }\r\n    } catch (error) {\r\n        safeDebugError('Event listener error', error);\r\n    }\r\n    return null;\r\n}\r\n\r\n// Simple toast notifications\r\nfunction showSuccess(message) {\r\n    showToast(message, 'success');\r\n}\r\n\r\nfunction showError(message) {\r\n    showToast(message, 'error');\r\n}\r\n\r\nfunction showWarning(message) {\r\n    showToast(message, 'warning');\r\n}\r\n\r\nfunction showToast(message, type = 'info') {\r\n    // Create toast container if it doesn't exist\r\n    let container = document.getElementById('toast-container');\r\n    if (!container) {\r\n        container = document.createElement('div');\r\n        container.id = 'toast-container';\r\n        container.className = 'toast-container position-fixed bottom-0 end-0 p-3';\r\n        document.body.appendChild(container);\r\n    }\r\n\r\n    // Create toast element\r\n    const toast = document.createElement('div');\r\n    toast.className = `toast show toast-${type}`;\r\n    toast.setAttribute('role', 'alert');\r\n    toast.innerHTML = `\r\n        <div class=\"toast-body\">\r\n            <i class=\"fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'times-circle' : type === 'warning' ? 'exclamation-triangle' : 'info-circle'} me-2\"></i>\r\n            ${message}\r\n            <button type=\"button\" class=\"btn-close float-end\" data-bs-dismiss=\"toast\"></button>\r\n        </div>\r\n    `;\r\n\r\n    container.appendChild(toast);\r\n\r\n    // Auto-remove after 5 seconds\r\n    setTimeout(() => {\r\n        if (toast.parentNode) {\r\n            toast.parentNode.removeChild(toast);\r\n        }\r\n    }, 5000);\r\n}\r\n\r\n// Main application class\r\nclass FoamFightersApp {\r\n    constructor() {\r\n        this.isInitialized = false;\r\n        this.listenerIds = [];\r\n        \r\n        // Initialize when DOM is ready\r\n        if (document.readyState === 'loading') {\r\n            document.addEventListener('DOMContentLoaded', () => this.init());\r\n        } else {\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize the application\r\n     */\r\n    async init() {\r\n        try {\r\n            safeDebugLog('Initializing Foam Fighters website');\r\n\r\n            // Initialize performance optimizations first\r\n            await this.initializeLazyLoading();\r\n\r\n            // Initialize core components\r\n            await this.initializeNavigation();\r\n            await this.initializeQuoteForm();\r\n            await this.initializeContactForm();\r\n            await this.initializeChatWidget();\r\n            await this.initializeScrollEffects();\r\n            await this.initializeAccessibility();\r\n            await this.initializeAnalytics();\r\n\r\n            this.isInitialized = true;\r\n            safeDebugLog('Foam Fighters website initialized successfully');\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error initializing website', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize navigation functionality\r\n     */\r\n    async initializeNavigation() {\r\n        try {\r\n            const navbar = document.getElementById('mainNavbar');\r\n            if (!navbar) return;\r\n\r\n            // Scroll effect for navbar\r\n            const scrollId = safeAddEventListener(window, 'scroll', () => {\r\n                if (window.scrollY > 50) {\r\n                    navbar.classList.add('scrolled');\r\n                } else {\r\n                    navbar.classList.remove('scrolled');\r\n                }\r\n            }, false, 'navbar-scroll');\r\n\r\n            if (scrollId) this.listenerIds.push(scrollId);\r\n\r\n            // Smooth scrolling for anchor links\r\n            const anchorLinks = document.querySelectorAll('a[href^=\"#\"]');\r\n            anchorLinks.forEach(link => {\r\n                const clickId = safeAddEventListener(link, 'click', (e) => {\r\n                    e.preventDefault();\r\n                    const targetId = link.getAttribute('href').substring(1);\r\n                    const targetElement = document.getElementById(targetId);\r\n                    \r\n                    if (targetElement) {\r\n                        const offsetTop = targetElement.offsetTop - 80; // Account for fixed navbar\r\n                        window.scrollTo({\r\n                            top: offsetTop,\r\n                            behavior: 'smooth'\r\n                        });\r\n                    }\r\n                }, false, 'smooth-scroll');\r\n\r\n                if (clickId) this.listenerIds.push(clickId);\r\n            });\r\n\r\n            // Mobile menu close on non-dropdown link click\r\n            const navLinks = document.querySelectorAll('.navbar-nav .nav-link:not(.dropdown-toggle)');\r\n            navLinks.forEach(link => {\r\n                const clickId = safeAddEventListener(link, 'click', () => {\r\n                    const navbarCollapse = document.getElementById('navbarNav');\r\n                    if (navbarCollapse && navbarCollapse.classList.contains('show')) {\r\n                        const bsCollapse = new bootstrap.Collapse(navbarCollapse);\r\n                        bsCollapse.hide();\r\n                    }\r\n                }, false, 'mobile-menu-close');\r\n\r\n                if (clickId) this.listenerIds.push(clickId);\r\n            });\r\n\r\n            // Handle dropdown item clicks to close mobile menu\r\n            const dropdownItems = document.querySelectorAll('.dropdown-item');\r\n            dropdownItems.forEach(item => {\r\n                const clickId = safeAddEventListener(item, 'click', () => {\r\n                    const navbarCollapse = document.getElementById('navbarNav');\r\n                    if (navbarCollapse && navbarCollapse.classList.contains('show')) {\r\n                        const bsCollapse = new bootstrap.Collapse(navbarCollapse);\r\n                        bsCollapse.hide();\r\n                    }\r\n                }, false, 'dropdown-item-close');\r\n\r\n                if (clickId) this.listenerIds.push(clickId);\r\n            });\r\n\r\n            // Enhanced mobile dropdown behavior\r\n            this.setupMobileDropdowns();\r\n            \r\n            // Add simple fallback for immediate mobile dropdown functionality\r\n            this.addSimpleMobileDropdownFallback();\r\n\r\n            safeDebugLog('Navigation initialized');\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error initializing navigation', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize quote form functionality\r\n     */\r\n    async initializeQuoteForm() {\r\n        try {\r\n            const quoteForm = document.getElementById('quoteForm');\r\n            if (!quoteForm) return;\r\n\r\n            // Form validation and submission\r\n            const submitId = safeAddEventListener(quoteForm, 'submit', async (e) => {\r\n                e.preventDefault();\r\n                await this.handleQuoteSubmission(quoteForm);\r\n            }, false, 'quote-form-submit');\r\n\r\n            if (submitId) this.listenerIds.push(submitId);\r\n\r\n            // Real-time validation\r\n            const formInputs = quoteForm.querySelectorAll('input, select, textarea');\r\n            formInputs.forEach(input => {\r\n                const blurId = safeAddEventListener(input, 'blur', () => {\r\n                    this.validateField(input);\r\n                }, false, 'form-validation');\r\n\r\n                if (blurId) this.listenerIds.push(blurId);\r\n            });\r\n\r\n            // Phone number formatting for both quote and contact forms\r\n            const phoneInputs = document.querySelectorAll('input[type=\"tel\"]');\r\n            phoneInputs.forEach(phoneInput => {\r\n                const inputId = safeAddEventListener(phoneInput, 'input', () => {\r\n                    this.formatPhoneNumber(phoneInput);\r\n                }, false, 'phone-formatting');\r\n\r\n                if (inputId) this.listenerIds.push(inputId);\r\n            });\r\n\r\n            safeDebugLog('Quote form initialized');\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error initializing quote form', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize contact form functionality\r\n     */\r\n    async initializeContactForm() {\r\n        try {\r\n            const contactForm = document.getElementById('contactForm');\r\n            if (!contactForm) return;\r\n\r\n            // Form validation and submission\r\n            const submitId = safeAddEventListener(contactForm, 'submit', async (e) => {\r\n                e.preventDefault();\r\n                await this.handleContactSubmission(contactForm);\r\n            }, false, 'contact-form-submit');\r\n\r\n            if (submitId) this.listenerIds.push(submitId);\r\n\r\n            // Real-time validation\r\n            const formInputs = contactForm.querySelectorAll('input, select, textarea');\r\n            formInputs.forEach(input => {\r\n                const blurId = safeAddEventListener(input, 'blur', () => {\r\n                    this.validateField(input);\r\n                }, false, 'form-validation');\r\n\r\n                if (blurId) this.listenerIds.push(blurId);\r\n            });\r\n\r\n            // Phone number formatting for contact form\r\n            const phoneInput = contactForm.querySelector('input[type=\"tel\"]');\r\n            if (phoneInput) {\r\n                const inputId = safeAddEventListener(phoneInput, 'input', () => {\r\n                    this.formatPhoneNumber(phoneInput);\r\n                }, false, 'phone-formatting');\r\n\r\n                if (inputId) this.listenerIds.push(inputId);\r\n            }\r\n\r\n            safeDebugLog('Contact form initialized');\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error initializing contact form', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle quote form submission\r\n     */\r\n    async handleQuoteSubmission(form) {\r\n        try {\r\n            // Validate form\r\n            if (!this.validateForm(form)) {\r\n                showError('Please correct the errors in the form before submitting.');\r\n                return;\r\n            }\r\n\r\n            // Show loading state\r\n            const submitButton = form.querySelector('button[type=\"submit\"]');\r\n            const submitText = submitButton.querySelector('.submit-text');\r\n            const loadingText = submitButton.querySelector('.loading-text');\r\n            \r\n            submitButton.disabled = true;\r\n            submitText.classList.add('d-none');\r\n            loadingText.classList.remove('d-none');\r\n\r\n            // Collect form data\r\n            const formData = new FormData(form);\r\n            const inquiryData = {\r\n                name: `${formData.get('firstName')} ${formData.get('lastName')}`.trim(),\r\n                firstName: formData.get('firstName'),\r\n                lastName: formData.get('lastName'),\r\n                email: formData.get('email'),\r\n                phone: formData.get('phone'),\r\n                address: formData.get('address'),\r\n                propertyType: formData.get('propertyType'),\r\n                foamType: formData.get('foamType'),\r\n                estimatedArea: formData.get('estimatedArea') ? parseInt(formData.get('estimatedArea')) : null,\r\n                urgency: formData.get('urgency'),\r\n                subject: formData.get('subject'),\r\n                message: formData.get('message'),\r\n                preferredContact: formData.get('preferredContact'),\r\n                consent: formData.get('consent') === 'on'\r\n            };\r\n\r\n            // Submit to API\r\n            // Try window.FirebaseConfig first, fallback to direct API call\r\n            let result;\r\n            if (window.FirebaseConfig && window.FirebaseConfig.apiCall) {\r\n                result = await window.FirebaseConfig.apiCall('/inquiries', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(inquiryData)\r\n                });\r\n            } else {\r\n                // Fallback direct API call\r\n                const apiUrl = 'https://api-6swwnulcrq-nw.a.run.app/inquiries';\r\n                const response = await fetch(apiUrl, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(inquiryData)\r\n                });\r\n                result = await response.json();\r\n            }\r\n\r\n            // Success - result will contain the response data\r\n            showSuccess('Your quote request has been submitted successfully! We\\'ll contact you within 24-48 hours.');\r\n            form.reset();\r\n            \r\n            // Track conversion\r\n            this.trackConversion('quote_request', {\r\n                urgency: inquiryData.urgency,\r\n                propertyType: inquiryData.propertyType\r\n            });\r\n\r\n            // Show reference number if available\r\n            if (result.inquiry && result.inquiry.referenceNumber) {\r\n                showSuccess('Thank you! Your quote request has been submitted. Reference number: ' + result.inquiry.referenceNumber);\r\n            }\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error submitting quote form', error);\r\n            showError('There was an error submitting your request. Please try again or call us directly at 0333 577 0132.');\r\n\r\n        } finally {\r\n            // Reset loading state\r\n            const submitButton = form.querySelector('button[type=\"submit\"]');\r\n            const submitText = submitButton.querySelector('.submit-text');\r\n            const loadingText = submitButton.querySelector('.loading-text');\r\n            \r\n            submitButton.disabled = false;\r\n            submitText.classList.remove('d-none');\r\n            loadingText.classList.add('d-none');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle contact form submission\r\n     */\r\n    async handleContactSubmission(form) {\r\n        try {\r\n            // Validate form\r\n            if (!this.validateForm(form)) {\r\n                showError('Please correct the errors in the form before submitting.');\r\n                return;\r\n            }\r\n\r\n            // Show loading state\r\n            const submitButton = form.querySelector('button[type=\"submit\"]');\r\n            const submitText = submitButton.querySelector('.submit-text') || submitButton;\r\n            const loadingText = submitButton.querySelector('.loading-text');\r\n            \r\n            submitButton.disabled = true;\r\n            if (loadingText) {\r\n                submitText.classList.add('d-none');\r\n                loadingText.classList.remove('d-none');\r\n            } else {\r\n                submitButton.textContent = 'Submitting...';\r\n            }\r\n\r\n            // Collect form data\r\n            const formData = new FormData(form);\r\n            \r\n            // Handle checkbox arrays (foam location, issues)\r\n            const foamLocations = Array.from(formData.getAll('foamLocation[]'));\r\n            const issues = Array.from(formData.getAll('issues[]'));\r\n\r\n            const contactData = {\r\n                name: `${formData.get('firstName')} ${formData.get('lastName')}`.trim(),\r\n                firstName: formData.get('firstName'),\r\n                lastName: formData.get('lastName'),\r\n                email: formData.get('email'),\r\n                phone: formData.get('phone'),\r\n                propertyType: formData.get('propertyType'),\r\n                urgency: formData.get('urgency'),\r\n                postcode: formData.get('postcode'),\r\n                foamLocation: foamLocations,\r\n                foamAge: formData.get('foamAge'),\r\n                issues: issues,\r\n                message: formData.get('message'),\r\n                \r\n                // Contact-specific fields\r\n                subject: 'Contact Form Submission',\r\n                preferredContact: 'email',\r\n                consent: formData.get('consent') === 'on',\r\n                \r\n                // Add urgency mapping for backend\r\n                urgencyLevel: this.mapContactUrgencyToLevel(formData.get('urgency'))\r\n            };\r\n\r\n            // Submit to API\r\n            // Try window.FirebaseConfig first, fallback to direct API call\r\n            let result;\r\n            if (window.FirebaseConfig && window.FirebaseConfig.apiCall) {\r\n                result = await window.FirebaseConfig.apiCall('/inquiries', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(contactData)\r\n                });\r\n            } else {\r\n                // Fallback direct API call\r\n                const apiUrl = 'https://api-6swwnulcrq-nw.a.run.app/inquiries';\r\n                const response = await fetch(apiUrl, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(contactData)\r\n                });\r\n                result = await response.json();\r\n            }\r\n\r\n            // Success\r\n            showSuccess('Thank you for your contact! We\\'ll be in touch within 24 hours to discuss your spray foam situation.');\r\n            form.reset();\r\n            \r\n            // Track conversion\r\n            this.trackConversion('contact_form', {\r\n                urgency: contactData.urgency,\r\n                propertyType: contactData.propertyType,\r\n                issues: issues.length\r\n            });\r\n\r\n            // Show reference number if available\r\n            if (result.inquiry && result.inquiry.referenceNumber) {\r\n                safeSetTimeout(() => {\r\n                    showSuccess('Your reference number is: ' + result.inquiry.referenceNumber);\r\n                }, 2000);\r\n            }\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error submitting contact form', error);\r\n            showError('There was an error submitting your message. Please try again or call us directly at 0333 577 0132.');\r\n\r\n        } finally {\r\n            // Reset loading state\r\n            const submitButton = form.querySelector('button[type=\"submit\"]');\r\n            const submitText = submitButton.querySelector('.submit-text') || submitButton;\r\n            const loadingText = submitButton.querySelector('.loading-text');\r\n            \r\n            submitButton.disabled = false;\r\n            if (loadingText) {\r\n                submitText.classList.remove('d-none');\r\n                loadingText.classList.add('d-none');\r\n            } else {\r\n                submitButton.textContent = 'Submit Contact Request';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Map contact form urgency to API urgency level\r\n     */\r\n    mapContactUrgencyToLevel(contactUrgency) {\r\n        const mapping = {\r\n            'planning': 'low',\r\n            'mortgage': 'high',\r\n            'sale': 'urgent',\r\n            'insurance': 'high',\r\n            'emergency': 'urgent'\r\n        };\r\n        return mapping[contactUrgency] || 'medium';\r\n    }\r\n\r\n    /**\r\n     * Validate entire form\r\n     */\r\n    validateForm(form) {\r\n        let isValid = true;\r\n        const requiredFields = form.querySelectorAll('[required]');\r\n        \r\n        requiredFields.forEach(field => {\r\n            if (!this.validateField(field)) {\r\n                isValid = false;\r\n            }\r\n        });\r\n\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Validate individual field\r\n     */\r\n    validateField(field) {\r\n        const value = field.value.trim();\r\n        let isValid = true;\r\n        let errorMessage = '';\r\n\r\n        // Clear previous validation\r\n        field.classList.remove('is-invalid', 'is-valid');\r\n\r\n        // Required field validation\r\n        if (field.hasAttribute('required') && !value) {\r\n            isValid = false;\r\n            errorMessage = 'This field is required.';\r\n        }\r\n\r\n        // Email validation\r\n        if (field.type === 'email' && value) {\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            if (!emailRegex.test(value)) {\r\n                isValid = false;\r\n                errorMessage = 'Please enter a valid email address.';\r\n            }\r\n        }\r\n\r\n        // Phone validation (basic UK format)\r\n        if (field.type === 'tel' && value) {\r\n            const phoneRegex = /^[\\+]?[(]?[\\d\\s\\-\\(\\)]{10,}$/;\r\n            if (!phoneRegex.test(value)) {\r\n                isValid = false;\r\n                errorMessage = 'Please enter a valid phone number.';\r\n            }\r\n        }\r\n\r\n        // Number validation\r\n        if (field.type === 'number' && value) {\r\n            const num = parseInt(value);\r\n            const min = parseInt(field.getAttribute('min'));\r\n            const max = parseInt(field.getAttribute('max'));\r\n            \r\n            if (isNaN(num) || (min && num < min) || (max && num > max)) {\r\n                isValid = false;\r\n                errorMessage = `Please enter a number between ${min || 0} and ${max || 'unlimited'}.`;\r\n            }\r\n        }\r\n\r\n        // Apply validation state\r\n        if (isValid && value) {\r\n            field.classList.add('is-valid');\r\n        } else if (!isValid) {\r\n            field.classList.add('is-invalid');\r\n            \r\n            // Update error message\r\n            const feedback = field.parentNode.querySelector('.invalid-feedback');\r\n            if (feedback) {\r\n                feedback.textContent = errorMessage;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Format phone number input\r\n     */\r\n    formatPhoneNumber(input) {\r\n        let value = input.value.replace(/\\D/g, '');\r\n        \r\n        if (value.startsWith('44')) {\r\n            value = '+44 ' + value.substring(2);\r\n        } else if (value.startsWith('0')) {\r\n            value = value.substring(1);\r\n            value = '+44 ' + value;\r\n        }\r\n\r\n        // Format as +44 XXXX XXX XXX\r\n        if (value.startsWith('+44')) {\r\n            const numbers = value.substring(3).replace(/\\s/g, '');\r\n            if (numbers.length >= 10) {\r\n                value = `+44 ${numbers.substring(0, 4)} ${numbers.substring(4, 7)} ${numbers.substring(7, 10)}`;\r\n            }\r\n        }\r\n\r\n        input.value = value;\r\n    }\r\n\r\n    /**\r\n     * Initialize chat widget\r\n     */\r\n    async initializeChatWidget() {\r\n        try {\r\n            const chatWidget = document.getElementById('chat-widget');\r\n            if (!chatWidget) return;\r\n\r\n            // Create chat button\r\n            chatWidget.innerHTML = `\r\n                <div class=\"chat-trigger\">\r\n                    <i class=\"fas fa-comments\"></i>\r\n                    Chat with us\r\n                </div>\r\n            `;\r\n\r\n            // Add click handler\r\n            const clickId = safeAddEventListener(chatWidget, 'click', () => {\r\n                this.openChatWidget();\r\n            }, false, 'chat-widget-click');\r\n\r\n            if (clickId) this.listenerIds.push(clickId);\r\n\r\n            // Show chat widget after delay\r\n            safeSetTimeout(() => {\r\n                chatWidget.style.display = 'block';\r\n                chatWidget.style.animation = 'fadeInUp 0.5s ease';\r\n            }, 5000, 'show-chat-widget');\r\n\r\n            safeDebugLog('Chat widget initialized');\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error initializing chat widget', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Open chat widget\r\n     */\r\n    openChatWidget() {\r\n        // For now, show a simple modal with contact options\r\n        // In production, this would integrate with a chat service like Intercom, Zendesk, etc.\r\n        \r\n        const modal = document.createElement('div');\r\n        modal.className = 'modal fade';\r\n        modal.innerHTML = `\r\n            <div class=\"modal-dialog modal-dialog-centered\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\">Contact Foam Fighters</h5>\r\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <p>We're here to help! Choose your preferred way to get in touch:</p>\r\n                        <div class=\"d-grid gap-2\">\r\n                            <a href=\"tel:0333577032\" class=\"btn btn-primary\">\r\n                                <i class=\"fas fa-phone me-2\"></i>Call: 0333 577 0132\r\n                            </a>\r\n                            <a href=\"mailto:info@foamfighters.co.uk\" class=\"btn btn-outline-primary\">\r\n                                <i class=\"fas fa-envelope me-2\"></i>Email: info@foamfighters.co.uk\r\n                            </a>\r\n                            <a href=\"#quote-form\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">\r\n                                <i class=\"fas fa-calculator me-2\"></i>Get a Quote\r\n                            </a>\r\n                        </div>\r\n                        <hr>\r\n                        <p class=\"text-muted small\">\r\n                            <strong>Business Hours:</strong> Monday-Friday: 8:00 AM - 6:00 PM<br>\r\n                            <strong>Emergency Service:</strong> Available for urgent property sale situations\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        document.body.appendChild(modal);\r\n        const bsModal = new bootstrap.Modal(modal);\r\n        bsModal.show();\r\n\r\n        // Remove modal from DOM when hidden\r\n        modal.addEventListener('hidden.bs.modal', () => {\r\n            document.body.removeChild(modal);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialize scroll effects\r\n     */\r\n    async initializeScrollEffects() {\r\n        try {\r\n            // Intersection Observer for animations\r\n            const observerOptions = {\r\n                threshold: 0.1,\r\n                rootMargin: '0px 0px -50px 0px'\r\n            };\r\n\r\n            const observer = new IntersectionObserver((entries) => {\r\n                entries.forEach(entry => {\r\n                    if (entry.isIntersecting) {\r\n                        entry.target.style.animation = 'fadeInUp 0.6s ease forwards';\r\n                        observer.unobserve(entry.target);\r\n                    }\r\n                });\r\n            }, observerOptions);\r\n\r\n            // Observe elements for animation\r\n            const animateElements = document.querySelectorAll('.problem-card, .process-step, .trust-item');\r\n            animateElements.forEach(el => {\r\n                el.style.opacity = '0';\r\n                el.style.transform = 'translateY(20px)';\r\n                observer.observe(el);\r\n            });\r\n\r\n            safeDebugLog('Scroll effects initialized');\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error initializing scroll effects', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize accessibility features\r\n     */\r\n    async initializeAccessibility() {\r\n        try {\r\n            // Focus management for modals\r\n            document.addEventListener('shown.bs.modal', (e) => {\r\n                const modal = e.target;\r\n                const focusable = modal.querySelector('[autofocus], .btn-primary, input, button');\r\n                if (focusable) {\r\n                    focusable.focus();\r\n                }\r\n            });\r\n\r\n            // Keyboard navigation for custom elements\r\n            const customButtons = document.querySelectorAll('[role=\"button\"]');\r\n            customButtons.forEach(button => {\r\n                const keydownId = safeAddEventListener(button, 'keydown', (e) => {\r\n                    if (e.key === 'Enter' || e.key === ' ') {\r\n                        e.preventDefault();\r\n                        button.click();\r\n                    }\r\n                }, false, 'custom-button-keyboard');\r\n\r\n                if (keydownId) this.listenerIds.push(keydownId);\r\n            });\r\n\r\n            // Skip links\r\n            const skipLinks = document.querySelectorAll('[href^=\"#\"]');\r\n            skipLinks.forEach(link => {\r\n                const clickId = safeAddEventListener(link, 'click', (e) => {\r\n                    const href = link.getAttribute('href');\r\n                    // Skip empty hashes or dropdown toggles\r\n                    if (href === '#' || link.getAttribute('data-bs-toggle')) {\r\n                        return;\r\n                    }\r\n                    \r\n                    try {\r\n                        const target = document.querySelector(href);\r\n                        if (target) {\r\n                            target.focus();\r\n                            target.scrollIntoView();\r\n                        }\r\n                    } catch (error) {\r\n                        // Invalid selector, skip\r\n                        safeDebugWarn('Invalid href selector:', href);\r\n                    }\r\n                }, false, 'skip-link');\r\n\r\n                if (clickId) this.listenerIds.push(clickId);\r\n            });\r\n\r\n            safeDebugLog('Accessibility features initialized');\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error initializing accessibility', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize analytics tracking\r\n     */\r\n    async initializeAnalytics() {\r\n        try {\r\n            // Track page view\r\n            this.trackPageView();\r\n\r\n            // Track form interactions\r\n            const forms = document.querySelectorAll('form');\r\n            forms.forEach(form => {\r\n                const submitId = safeAddEventListener(form, 'submit', () => {\r\n                    this.trackEvent('form_submit', {\r\n                        form_id: form.id || 'unknown'\r\n                    });\r\n                }, false, 'form-analytics');\r\n\r\n                if (submitId) this.listenerIds.push(submitId);\r\n            });\r\n\r\n            // Track phone number clicks\r\n            const phoneLinks = document.querySelectorAll('a[href^=\"tel:\"]');\r\n            phoneLinks.forEach(link => {\r\n                const clickId = safeAddEventListener(link, 'click', () => {\r\n                    this.trackEvent('phone_click', {\r\n                        phone_number: link.getAttribute('href')\r\n                    });\r\n                }, false, 'phone-analytics');\r\n\r\n                if (clickId) this.listenerIds.push(clickId);\r\n            });\r\n\r\n            // Track email clicks\r\n            const emailLinks = document.querySelectorAll('a[href^=\"mailto:\"]');\r\n            emailLinks.forEach(link => {\r\n                const clickId = safeAddEventListener(link, 'click', () => {\r\n                    this.trackEvent('email_click', {\r\n                        email: link.getAttribute('href')\r\n                    });\r\n                }, false, 'email-analytics');\r\n\r\n                if (clickId) this.listenerIds.push(clickId);\r\n            });\r\n\r\n            safeDebugLog('Analytics initialized');\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error initializing analytics', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Track page view\r\n     */\r\n    trackPageView() {\r\n        try {\r\n            // Google Analytics 4\r\n            if (typeof gtag !== 'undefined') {\r\n                gtag('config', 'GA_MEASUREMENT_ID', {\r\n                    page_title: document.title,\r\n                    page_location: window.location.href\r\n                });\r\n            }\r\n\r\n            safeDebugLog('Page view tracked', {\r\n                page: window.location.pathname,\r\n                title: document.title\r\n            });\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error tracking page view', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Track custom event\r\n     */\r\n    trackEvent(eventName, parameters = {}) {\r\n        try {\r\n            // Google Analytics 4\r\n            if (typeof gtag !== 'undefined') {\r\n                gtag('event', eventName, parameters);\r\n            }\r\n\r\n            safeDebugLog('Event tracked', { eventName, parameters });\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error tracking event', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Track conversion\r\n     */\r\n    trackConversion(conversionType, data = {}) {\r\n        try {\r\n            this.trackEvent('conversion', {\r\n                conversion_type: conversionType,\r\n                ...data\r\n            });\r\n\r\n            safeDebugLog('Conversion tracked', { conversionType, data });\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error tracking conversion', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleanup when page unloads\r\n     */\r\n    /**\r\n     * Initialize lazy loading for performance\r\n     */\r\n    async initializeLazyLoading() {\r\n        try {\r\n            // Import and initialize lazy loading\r\n            const { default: LazyLoader } = await import('./lazy-loading.js');\r\n            this.lazyLoader = new LazyLoader();\r\n            \r\n            safeDebugLog('Lazy loading initialized');\r\n        } catch (error) {\r\n            safeDebugError('Lazy loading initialization failed', error);\r\n            // Fallback: load all images immediately\r\n            this.fallbackImageLoading();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fallback image loading for when lazy loading fails\r\n     */\r\n    fallbackImageLoading() {\r\n        const lazyImages = document.querySelectorAll('img[data-src]');\r\n        lazyImages.forEach(img => {\r\n            img.src = img.dataset.src;\r\n            img.removeAttribute('data-src');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Setup mobile-specific dropdown behavior\r\n     */\r\n    setupMobileDropdowns() {\r\n        try {\r\n            // Wait for Bootstrap to be available\r\n            const initializeDropdowns = () => {\r\n                const dropdownElements = document.querySelectorAll('.nav-item.dropdown');\r\n                \r\n                dropdownElements.forEach(dropdownElement => {\r\n                    const toggle = dropdownElement.querySelector('.dropdown-toggle');\r\n                    const menu = dropdownElement.querySelector('.dropdown-menu');\r\n                    \r\n                    if (!toggle || !menu) return;\r\n\r\n                    // Remove Bootstrap data attributes on mobile to prevent conflicts\r\n                    if (window.innerWidth <= 991) {\r\n                        toggle.removeAttribute('data-bs-toggle');\r\n                    }\r\n\r\n                    // Mobile-specific click handler\r\n                    const clickId = safeAddEventListener(toggle, 'click', (e) => {\r\n                        if (window.innerWidth <= 991) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            \r\n                            const isCurrentlyOpen = dropdownElement.classList.contains('show');\r\n                            \r\n                            // Close all dropdowns first\r\n                            document.querySelectorAll('.nav-item.dropdown').forEach(dropdown => {\r\n                                dropdown.classList.remove('show');\r\n                                const dropdownMenu = dropdown.querySelector('.dropdown-menu');\r\n                                if (dropdownMenu) {\r\n                                    dropdownMenu.classList.remove('show');\r\n                                }\r\n                            });\r\n                            \r\n                            // Toggle current dropdown\r\n                            if (!isCurrentlyOpen) {\r\n                                dropdownElement.classList.add('show');\r\n                                menu.classList.add('show');\r\n                                safeDebugLog('Mobile dropdown opened');\r\n                            }\r\n                        }\r\n                    }, false, 'mobile-dropdown-click');\r\n\r\n                    // Enhanced touch handling for iOS\r\n                    const touchStartId = safeAddEventListener(toggle, 'touchstart', (e) => {\r\n                        if (window.innerWidth <= 991) {\r\n                            // Ensure the element is ready for touch\r\n                            toggle.style.webkitTouchCallout = 'none';\r\n                            toggle.style.webkitUserSelect = 'none';\r\n                        }\r\n                    }, {passive: true}, 'mobile-dropdown-touchstart');\r\n\r\n                    if (clickId) this.listenerIds.push(clickId);\r\n                    if (touchStartId) this.listenerIds.push(touchStartId);\r\n                });\r\n\r\n                // Close dropdowns when clicking outside\r\n                const bodyClickId = safeAddEventListener(document.body, 'click', (e) => {\r\n                    if (window.innerWidth <= 991) {\r\n                        const clickedDropdown = e.target.closest('.nav-item.dropdown');\r\n                        if (!clickedDropdown) {\r\n                            document.querySelectorAll('.nav-item.dropdown.show').forEach(dropdown => {\r\n                                dropdown.classList.remove('show');\r\n                                const menu = dropdown.querySelector('.dropdown-menu');\r\n                                if (menu) menu.classList.remove('show');\r\n                            });\r\n                        }\r\n                    }\r\n                }, false, 'mobile-dropdown-outside-click');\r\n\r\n                if (bodyClickId) this.listenerIds.push(bodyClickId);\r\n            };\r\n\r\n            // Initialize immediately or wait for Bootstrap\r\n            if (typeof bootstrap !== 'undefined') {\r\n                initializeDropdowns();\r\n            } else {\r\n                // Wait for Bootstrap to load\r\n                const checkBootstrap = setInterval(() => {\r\n                    if (typeof bootstrap !== 'undefined') {\r\n                        clearInterval(checkBootstrap);\r\n                        initializeDropdowns();\r\n                    }\r\n                }, 100);\r\n                \r\n                // Fallback: initialize after 2 seconds anyway\r\n                setTimeout(initializeDropdowns, 2000);\r\n            }\r\n\r\n            safeDebugLog('Mobile dropdowns setup initiated');\r\n        } catch (error) {\r\n            safeDebugError('Error setting up mobile dropdowns', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Simple fallback mobile dropdown functionality\r\n     */\r\n    addSimpleMobileDropdownFallback() {\r\n        try {\r\n            // Add immediate click handler for Services link\r\n            const servicesLink = document.querySelector('.nav-link.dropdown-toggle');\r\n            if (servicesLink) {\r\n                const fallbackClickId = safeAddEventListener(servicesLink, 'touchend', (e) => {\r\n                    if (window.innerWidth <= 991) {\r\n                        e.preventDefault();\r\n                        \r\n                        const dropdownParent = servicesLink.closest('.nav-item.dropdown');\r\n                        const dropdownMenu = dropdownParent.querySelector('.dropdown-menu');\r\n                        \r\n                        if (dropdownMenu) {\r\n                            const isVisible = dropdownMenu.style.display === 'block' || dropdownMenu.classList.contains('show');\r\n                            \r\n                            if (isVisible) {\r\n                                dropdownMenu.style.display = 'none';\r\n                                dropdownMenu.classList.remove('show');\r\n                                dropdownParent.classList.remove('show');\r\n                            } else {\r\n                                dropdownMenu.style.display = 'block';\r\n                                dropdownMenu.classList.add('show');\r\n                                dropdownParent.classList.add('show');\r\n                            }\r\n                        }\r\n                    }\r\n                }, {passive: false}, 'mobile-dropdown-fallback');\r\n\r\n                if (fallbackClickId) this.listenerIds.push(fallbackClickId);\r\n                safeDebugLog('Mobile dropdown fallback added');\r\n            }\r\n        } catch (error) {\r\n            safeDebugError('Error setting up mobile dropdown fallback', error);\r\n        }\r\n    }\r\n\r\n    cleanup() {\r\n        try {\r\n            // Remove all event listeners\r\n            // (This is handled automatically by our EventListenerManager)\r\n            \r\n            safeDebugLog('App cleanup completed');\r\n\r\n        } catch (error) {\r\n            safeDebugError('Error during cleanup', error);\r\n        }\r\n    }\r\n}\r\n\r\n// Initialize the application\r\nconst app = new FoamFightersApp();\r\n\r\n// Cleanup on page unload\r\nwindow.addEventListener('beforeunload', () => {\r\n    app.cleanup();\r\n});\r\n\r\n// Export for global access\r\nwindow.FoamFightersApp = app;"],"file":"assets/js/main-742bdb96.js"}